- name: Copying SSH key
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ lookup('file', ~/.ssh/id_ed25519.pub) }}"
  with_fileglob:
    - id_dsa.pub
  become: true

- name: Install required packages
  apt:
    name:
      - qemu-kvm
      - libvirt-daemon-system
      - virt-manager
      - bridge-utils
    state: present

- name: Check if base image exists
  become: true
  stat:
    path: "/var/lib/libvirt/images/ubuntu-base.qcow2"
  register: ubuntu_base_image

- name: Download Ubuntu base image if not exist
  become: true
  get_url:
    url: "https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64-disk-kvm.img"
    dest: "/var/lib/libvirt/images/ubuntu-base.qcow2"
    mode: '0644'
  when: not ubuntu_base_image.stat.exists

- name: Resize Ubuntu base image
  become: true
  command: qemu-img resize /var/lib/libvirt/images/ubuntu-base.qcow2 +38G
  when: not ubuntu_base_image.stat.exists

- name: Clean up previous VMs
  ansible.builtin.include_tasks: cleanup.yml  

- name: Create VM disk image for {{ item.name }}
  become: true
  command: >
    qemu-img create -f qcow2 -b /var/lib/libvirt/images/ubuntu-base.qcow2 -F qcow2 {{ item.disk }}
  loop: "{{ qemu.vms }}"

- name: Set up cloud-init server
  ansible.builtin.include_tasks: cloud_init.yml

- name: Create VM with cloud-init
  shell: >
    virt-install --name {{ item.name }}
    --ram {{ item.ram }} --vcpus={{ item.cpu_count }},cpuset={{ item.cpu }}
    --disk path={{ item.disk }},format=qcow2
    --os-variant=ubuntu22.04
    --graphics none
    --noautoconsole
    --boot hd
    --network default
    --cloud-init user-data="{{qemu.cloud_init_server_dir}}/{{ item.name }}/user-data",meta-data="{{qemu.cloud_init_server_dir}}/{{ item.name }}/meta-data"
    --import
  loop: "{{ qemu.vms }}"

- name: Wait for VMs to be ready
  wait_for_connection:
    timeout: 300
  loop: "{{ qemu.vms }}"
