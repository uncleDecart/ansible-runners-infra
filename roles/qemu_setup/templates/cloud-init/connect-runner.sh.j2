#!/bin/bash

set -e

GITHUB_URL={{ github_runner.url }} 
# WARN: RUNNER_NAME is used in playbook for cleaning up. Be aware when changing
RUNNER_NAME="$(hostname)"
RUNNER_VERSION={{ github_runner.version }}
RUNNER_DIR="/opt/actions-runner"
GITHUB_PAT={{ github_runner.token }}

enable_nested_virtualization() {
    if [[ "$(grep -E 'vmx|svm' /proc/cpuinfo)" ]]; then
        echo "Nested virtualization is already enabled."
    else
        echo "Enabling nested virtualization..."
        echo "options kvm_intel nested=1" | sudo tee /etc/modprobe.d/kvm-intel.conf
        echo "options kvm_amd nested=1" | sudo tee /etc/modprobe.d/kvm-amd.conf
        sudo modprobe -r kvm_intel kvm_amd
        sudo modprobe kvm_intel kvm_amd
        echo "Nested virtualization enabled."
    fi
}

install_docker() {
    if ! command -v docker &> /dev/null; then
        echo "Installing Docker..."
        sudo apt update
        sudo apt install -y docker.io
        sudo systemctl enable --now docker
        echo "Docker installed successfully."
    else
        echo "Docker is already installed."
    fi
}

install_github_runner() {
    if [[ ! -d "$RUNNER_DIR" ]]; then
        echo "Installing GitHub Actions Runner..."
        sudo mkdir -p "$RUNNER_DIR"
        sudo chown $USER:$USER "$RUNNER_DIR"
        cd "$RUNNER_DIR"
        curl -o actions-runner-linux-x64.tar.gz -L "https://github.com/actions/runner/releases/download/v$RUNNER_VERSION/actions-runner-linux-x64-$RUNNER_VERSION.tar.gz"
        tar xzf actions-runner-linux-x64.tar.gz
        rm actions-runner-linux-x64.tar.gz
        echo "GitHub Actions Runner installed."
    else
        echo "GitHub Actions Runner is already installed."
    fi
}

fetch_runner_token() {
    echo "Fetching GitHub Actions Runner registration token..."
    GITHUB_RUNNER_TOKEN=$(curl -L \
      -X POST \
      -H "Accept: application/vnd.github+json" \
      -H "Authorization: Bearer $GITHUB_PAT" \
      -H "X-GitHub-Api-Version: 2022-11-28" \
      https://api.github.com/repos/$GITHUB_URL/actions/runners/registration-token | jq -r .token)
    
    if [[ -z "$GITHUB_RUNNER_TOKEN" || "$GITHUB_RUNNER_TOKEN" == "null" ]]; then
        echo "Failed to fetch runner token. Exiting."
        exit 1
    fi
    echo "Successfully fetched runner token."
}

register_github_runner() {
    if [[ ! -f "$RUNNER_DIR/.runner" ]]; then
        echo "Registering GitHub Actions Runner..."
        cd "$RUNNER_DIR"
        ./config.sh --url "https://github.com/$GITHUB_URL" --token "$GITHUB_RUNNER_TOKEN" --name "$RUNNER_NAME" --runnergroup "default" --work "_work" --unattended --replace
        echo "GitHub Actions Runner registered."
    else
        echo "GitHub Actions Runner is already registered."
    fi
}

start_runner_service() {
    cd "$RUNNER_DIR"
    sudo ./svc.sh install
    sudo ./svc.sh start
    echo "GitHub Actions Runner is up and running!"
}

# Execute functions
enable_nested_virtualization
install_docker
install_github_runner
fetch_runner_token
register_github_runner
start_runner_service
